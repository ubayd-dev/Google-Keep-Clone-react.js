// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  notes  Notes[]
}

model Notes{
  id String @id @default(uuid())
  title String
content String?
createdAt DateTime @default(now())  
updatedAt DateTime @updatedAt
userId String
user User @relation(fields: [userId], references: [id])
tasks Tasks[]
noteType NoteType @default(PERSONAL)
reminders Reminder[]
}

model Tasks{
  id String @id @default(uuid())
  title String
description String?
createdAt DateTime @default(now())  
updatedAt DateTime @updatedAt
notesId String
notes Notes @relation(fields: [notesId], references: [id])
status TaskStatus @default(PENDING)
reminders Reminder[]

}

model Reminder {
  id          Int      @id @default(autoincrement())
  title       String
remindAt DateTime
  isSent Boolean  @default(false)
noteId String
note Notes @relation(fields:[noteId], references: [id] ,onDelete: Cascade)
taskId String? @unique
task Tasks? @relation(fields: [taskId], references: [id])
email String?
}

enum NoteType{
  PERSONAL
  WORK
  RECREATIONAL
}

enum TaskStatus{
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}


