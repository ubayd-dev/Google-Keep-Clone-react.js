{"ast":null,"code":"var _jsxFileName = \"/Users/thaqibubayd/Desktop/google-keep-react-app/frontend/src/context/FormContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useState, useContext } from \"react\";\n// import api from \"../services/axios.js\";\n// import { createNote } from \"../services/notes.js\";\n\n// // Create A Context\n// const FormContext = createContext();\n// export const FormProvider = ({ children }) => {\n//   const [notes, setNotes] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   // GET ALL NOTES\n//   const fetchNotes = async () => {\n//     setLoading(true);\n\n//     try {\n//       // HIT BACKEND CAL\n//       const res = await api.get(\"/notes\");\n//       //   STORE RESPONSE IN STATE, UPDATE STATE\n//       setNotes(res.data);\n//     } catch (e) {\n//       console.error(\"Error fetching notes:\", e);\n//     } finally {\n//       //   HIDE LOADING AFTER FETCH\n//       setLoading(false);\n//     }\n//   };\n//   const addNote = async ({ title, text }) => {\n//     try {\n//       const res = await api.post(\"/notes/create\", { title, content: text });\n//       setNotes((prevNotes) => [...prevNotes, res.data]);\n//     } catch (e) {\n//       console.error(\"Error adding note:\", e);\n//     }\n//   };\n//   const editNote = async ({ id, title, text }) => {\n//     try {\n//       const res = await api.patch(`/notes${id}`, { title, content: text });\n//       setNotes((prevNotes) =>\n//         prevNotes.map((note) => (note.id === id ? res.data : note))\n//       );\n//     } catch (e) {\n//       console.error(\"Error editing note:\", e);\n//     }\n//   };\n\n//   const deleteNote = async ({ id, title, text }) => {\n//     try {\n//       const res = await api.delete(\"/notes\", { title, context: text });\n//     } catch (e) {\n//       console.error(\"Error deleting note\");\n//     }\n//   };\n\n//   return (\n//     <FormContext.Provider\n//       value={{ notes, loading, fetchNotes, addNote, editNote, deleteNote }}\n//     >\n//       {children}\n//     </FormContext.Provider>\n//   );\n// };\n\n// export const useFormContext = () => useContext(FormContext);\n// src/context/FormContext.js\nimport React, { createContext, useState, useContext } from \"react\";\nimport { createNote, getNotes, updateNote, deleteNote } from \"../services/notes.js\";\n\n// Create Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContext = /*#__PURE__*/createContext();\nexport const FormProvider = ({\n  children\n}) => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // GET ALL NOTES\n  const fetchNotes = async () => {\n    setLoading(true);\n    try {\n      const res = await getNotes();\n      setNotes(res.data);\n    } catch (err) {\n      console.error(\"Error fetching notes:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ADD NOTE\n  const addNote = async ({\n    title,\n    text\n  }) => {\n    try {\n      const res = await createNote({\n        title,\n        content: text\n      });\n      setNotes(prev => [...prev, res.data]);\n    } catch (err) {\n      console.error(\"Error adding note:\", err);\n    }\n  };\n\n  // EDIT NOTE\n  const editNoteHandler = async ({\n    id,\n    title,\n    text\n  }) => {\n    try {\n      const res = await updateNote({\n        id,\n        title,\n        content: text\n      });\n      setNotes(prev => prev.map(note => note.id === id ? res.data : note));\n    } catch (err) {\n      console.error(\"Error editing note:\", err);\n    }\n  };\n\n  // DELETE NOTE\n  const deleteNoteHandler = async id => {\n    try {\n      await deleteNote(id);\n      setNotes(prev => prev.filter(note => note.id !== id));\n    } catch (err) {\n      console.error(\"Error deleting note:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: {\n      notes,\n      loading,\n      fetchNotes,\n      addNote,\n      editNote: editNoteHandler,\n      deleteNote: deleteNoteHandler\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(FormProvider, \"31Uge2ya4Z8LWkVS0TR1LntjQ44=\");\n_c = FormProvider;\nexport const useFormContext = () => {\n  _s2();\n  return useContext(FormContext);\n};\n_s2(useFormContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FormProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","createNote","getNotes","updateNote","deleteNote","jsxDEV","_jsxDEV","FormContext","FormProvider","children","_s","notes","setNotes","loading","setLoading","fetchNotes","res","data","err","console","error","addNote","title","text","content","prev","editNoteHandler","id","map","note","deleteNoteHandler","filter","Provider","value","editNote","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFormContext","_s2","$RefreshReg$"],"sources":["/Users/thaqibubayd/Desktop/google-keep-react-app/frontend/src/context/FormContext.js"],"sourcesContent":["// import React, { createContext, useState, useContext } from \"react\";\n// import api from \"../services/axios.js\";\n// import { createNote } from \"../services/notes.js\";\n\n// // Create A Context\n// const FormContext = createContext();\n// export const FormProvider = ({ children }) => {\n//   const [notes, setNotes] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   // GET ALL NOTES\n//   const fetchNotes = async () => {\n//     setLoading(true);\n\n//     try {\n//       // HIT BACKEND CAL\n//       const res = await api.get(\"/notes\");\n//       //   STORE RESPONSE IN STATE, UPDATE STATE\n//       setNotes(res.data);\n//     } catch (e) {\n//       console.error(\"Error fetching notes:\", e);\n//     } finally {\n//       //   HIDE LOADING AFTER FETCH\n//       setLoading(false);\n//     }\n//   };\n//   const addNote = async ({ title, text }) => {\n//     try {\n//       const res = await api.post(\"/notes/create\", { title, content: text });\n//       setNotes((prevNotes) => [...prevNotes, res.data]);\n//     } catch (e) {\n//       console.error(\"Error adding note:\", e);\n//     }\n//   };\n//   const editNote = async ({ id, title, text }) => {\n//     try {\n//       const res = await api.patch(`/notes${id}`, { title, content: text });\n//       setNotes((prevNotes) =>\n//         prevNotes.map((note) => (note.id === id ? res.data : note))\n//       );\n//     } catch (e) {\n//       console.error(\"Error editing note:\", e);\n//     }\n//   };\n\n//   const deleteNote = async ({ id, title, text }) => {\n//     try {\n//       const res = await api.delete(\"/notes\", { title, context: text });\n//     } catch (e) {\n//       console.error(\"Error deleting note\");\n//     }\n//   };\n\n//   return (\n//     <FormContext.Provider\n//       value={{ notes, loading, fetchNotes, addNote, editNote, deleteNote }}\n//     >\n//       {children}\n//     </FormContext.Provider>\n//   );\n// };\n\n// export const useFormContext = () => useContext(FormContext);\n// src/context/FormContext.js\nimport React, { createContext, useState, useContext } from \"react\";\nimport { createNote, getNotes, updateNote, deleteNote } from \"../services/notes.js\";\n\n// Create Context\nconst FormContext = createContext();\n\nexport const FormProvider = ({ children }) => {\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // GET ALL NOTES\n  const fetchNotes = async () => {\n    setLoading(true);\n    try {\n      const res = await getNotes();\n      setNotes(res.data);\n    } catch (err) {\n      console.error(\"Error fetching notes:\", err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ADD NOTE\n  const addNote = async ({ title, text }) => {\n    try {\n      const res = await createNote({ title, content: text });\n      setNotes((prev) => [...prev, res.data]);\n    } catch (err) {\n      console.error(\"Error adding note:\", err);\n    }\n  };\n\n  // EDIT NOTE\n  const editNoteHandler = async ({ id, title, text }) => {\n    try {\n      const res = await updateNote({ id, title, content: text });\n      setNotes((prev) => prev.map((note) => (note.id === id ? res.data : note)));\n    } catch (err) {\n      console.error(\"Error editing note:\", err);\n    }\n  };\n\n  // DELETE NOTE\n  const deleteNoteHandler = async (id) => {\n    try {\n      await deleteNote(id);\n      setNotes((prev) => prev.filter((note) => note.id !== id));\n    } catch (err) {\n      console.error(\"Error deleting note:\", err);\n    }\n  };\n\n  return (\n    <FormContext.Provider\n      value={{\n        notes,\n        loading,\n        fetchNotes,\n        addNote,\n        editNote: editNoteHandler,\n        deleteNote: deleteNoteHandler,\n      }}\n    >\n      {children}\n    </FormContext.Provider>\n  );\n};\n\nexport const useFormContext = () => useContext(FormContext);\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}