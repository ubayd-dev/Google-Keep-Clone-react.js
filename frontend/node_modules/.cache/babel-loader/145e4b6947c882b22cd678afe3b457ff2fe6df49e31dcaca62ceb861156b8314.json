{"ast":null,"code":"var _jsxFileName = \"/Users/thaqibubayd/Desktop/react-project/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Form from \"./components/Form/Form\";\nimport Notes from \"./components/Notes/Notes\";\nimport Modal from \"./components/Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOTES = [];\nconst App = () => {\n  _s();\n  // creating state for Notes\n  const [notes, setNotes] = useState(NOTES);\n  const [selectedNote, setSelectedNote] = useState({});\n  // creating state for Modal using \"is\" for boolean\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const addNote = note => {\n    setNotes(prevNotes => {\n      return [...prevNotes, note];\n    });\n  };\n  const deleteNote = id => {\n    setNotes(prevNotes => {\n      return prevNotes.filter(note => id !== note.id);\n    });\n  };\n  const editNote = editedNote => {\n    const newArray = notes.map(note => {\n      if (editedNote.id === note.id) {\n        note.title = editedNote.title;\n        note.text = editedNote.text;\n      }\n      return note;\n    });\n  };\n  const toggleModal = () => {\n    // open or close the modal on previous state - setIsModalOpen\n    setIsModalOpen(prevState => {\n      return !prevState;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addNote: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notes, {\n      notes: notes,\n      deleteNote: deleteNote,\n      toggleModal: toggleModal,\n      setSelectedNote: setSelectedNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      isModalOpen: isModalOpen,\n      selectedNote: selectedNote,\n      toggleModal: toggleModal,\n      editNote: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"m7PP5hgviLiDbTCbh0WbbmNs2zY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","Sidebar","Form","Notes","Modal","jsxDEV","_jsxDEV","NOTES","App","_s","notes","setNotes","selectedNote","setSelectedNote","isModalOpen","setIsModalOpen","addNote","note","prevNotes","deleteNote","id","filter","editNote","editedNote","newArray","map","title","text","toggleModal","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thaqibubayd/Desktop/react-project/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Form from \"./components/Form/Form\";\nimport Notes from \"./components/Notes/Notes\";\nimport Modal from \"./components/Modal/Modal\";\n\nconst NOTES = [];\nconst App = () => {\n  // creating state for Notes\n  const [notes, setNotes] = useState(NOTES);\n  const [selectedNote, setSelectedNote] = useState({});\n  // creating state for Modal using \"is\" for boolean\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const addNote = (note) => {\n    setNotes((prevNotes) => {\n      return [...prevNotes, note];\n    });\n  };\n\n  const deleteNote = (id) => {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((note) => id !== note.id);\n    });\n  };\n\n  const editNote = (editedNote) => {\n    const newArray = notes.map(note => {\n      if (editedNote.id === note.id) {\n        note.title = editedNote.title\n         note.text=editedNote.text\n      }\n      return note;\n    })\n    \n  }\n\n  const toggleModal = () => {\n    // open or close the modal on previous state - setIsModalOpen\n    setIsModalOpen((prevState) => {\n      return !prevState;\n    });\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <Sidebar />\n      <Form addNote={addNote} />\n      <Notes\n        notes={notes}\n        deleteNote={deleteNote}\n        toggleModal={toggleModal}\n        setSelectedNote={setSelectedNote}\n      />\n      {isModalOpen && (\n        <Modal isModalOpen={isModalOpen} selectedNote={selectedNote} toggleModal={toggleModal} editNote/>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}