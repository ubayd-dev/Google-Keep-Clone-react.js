{"ast":null,"code":"import React,{useState}from\"react\";import Navbar from\"./components/Navbar/Navbar\";import Sidebar from\"./components/Sidebar/Sidebar\";import Form from\"./components/Form/Form\";import Notes from\"./components/Notes/Notes\";import Modal from\"./components/Modal/Modal\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NOTES=[];const App=()=>{// creating state for Notes\nconst[notes,setNotes]=useState(NOTES);const[selectedNote,setSelectedNote]=useState({});// creating state for Modal using \"is\" for boolean\nconst[isModalOpen,setIsModalOpen]=useState(false);const addNote=note=>{setNotes(prevNotes=>{return[...prevNotes,note];});};const editNote=editedNote=>{setNotes(prevNotes=>{const newArray=prevNotes.map(note=>{if(editedNote.id===note.id){note.title=editedNote.title;note.text=editedNote.text;}return note;});return newArray;});};const deleteNote=id=>{setNotes(prevNotes=>{return prevNotes.filter(note=>id!==note.id);});};const toggleModal=()=>{// open or close the modal on previous state - setIsModalOpen\nsetIsModalOpen(prevState=>{return!prevState;});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsx(Form,{addNote:addNote}),/*#__PURE__*/_jsx(Notes,{notes:notes,deleteNote:deleteNote,toggleModal:toggleModal,setSelectedNote:setSelectedNote}),isModalOpen&&/*#__PURE__*/_jsx(Modal,{isModalOpen:isModalOpen,selectedNote:selectedNote,toggleModal:toggleModal,editNote:editNote})]});};export default App;","map":{"version":3,"names":["React","useState","Navbar","Sidebar","Form","Notes","Modal","jsx","_jsx","jsxs","_jsxs","NOTES","App","notes","setNotes","selectedNote","setSelectedNote","isModalOpen","setIsModalOpen","addNote","note","prevNotes","editNote","editedNote","newArray","map","id","title","text","deleteNote","filter","toggleModal","prevState","children"],"sources":["/Users/thaqibubayd/Desktop/google-keep-react-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Form from \"./components/Form/Form\";\nimport Notes from \"./components/Notes/Notes\";\nimport Modal from \"./components/Modal/Modal\";\n\nconst NOTES = [];\nconst App = () => {\n  // creating state for Notes\n  const [notes, setNotes] = useState(NOTES);\n  const [selectedNote, setSelectedNote] = useState({});\n  // creating state for Modal using \"is\" for boolean\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const addNote = (note) => {\n    setNotes((prevNotes) => {\n      return [...prevNotes, note];\n    });\n  };\n\n  const editNote = (editedNote) => {\n    setNotes((prevNotes) => {\n      const newArray = prevNotes.map((note) => {\n        if (editedNote.id === note.id) {\n          note.title = editedNote.title;\n          note.text = editedNote.text;\n        }\n        return note;\n      });\n      return newArray;\n    });\n  };\n\n  const deleteNote = (id) => {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((note) => id !== note.id);\n    });\n  };\n\n\n  const toggleModal = () => {\n    // open or close the modal on previous state - setIsModalOpen\n    setIsModalOpen((prevState) => {\n      return !prevState;\n    });\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <Sidebar />\n      <Form addNote={addNote} />\n      <Notes\n        notes={notes}\n        deleteNote={deleteNote}\n        toggleModal={toggleModal}\n        setSelectedNote={setSelectedNote}\n      />\n      {isModalOpen && (\n        <Modal\n          isModalOpen={isModalOpen}\n          selectedNote={selectedNote}\n          toggleModal={toggleModal}\n          editNote={editNote}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,MAAM,KAAM,4BAA4B,CAC/C,MAAO,CAAAC,OAAO,KAAM,8BAA8B,CAClD,MAAO,CAAAC,IAAI,KAAM,wBAAwB,CACzC,MAAO,CAAAC,KAAK,KAAM,0BAA0B,CAC5C,MAAO,CAAAC,KAAK,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE7C,KAAM,CAAAC,KAAK,CAAG,EAAE,CAChB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB;AACA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAACU,KAAK,CAAC,CACzC,KAAM,CAACI,YAAY,CAAEC,eAAe,CAAC,CAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CACpD;AACA,KAAM,CAACgB,WAAW,CAAEC,cAAc,CAAC,CAAGjB,QAAQ,CAAC,KAAK,CAAC,CAErD,KAAM,CAAAkB,OAAO,CAAIC,IAAI,EAAK,CACxBN,QAAQ,CAAEO,SAAS,EAAK,CACtB,MAAO,CAAC,GAAGA,SAAS,CAAED,IAAI,CAAC,CAC7B,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAE,QAAQ,CAAIC,UAAU,EAAK,CAC/BT,QAAQ,CAAEO,SAAS,EAAK,CACtB,KAAM,CAAAG,QAAQ,CAAGH,SAAS,CAACI,GAAG,CAAEL,IAAI,EAAK,CACvC,GAAIG,UAAU,CAACG,EAAE,GAAKN,IAAI,CAACM,EAAE,CAAE,CAC7BN,IAAI,CAACO,KAAK,CAAGJ,UAAU,CAACI,KAAK,CAC7BP,IAAI,CAACQ,IAAI,CAAGL,UAAU,CAACK,IAAI,CAC7B,CACA,MAAO,CAAAR,IAAI,CACb,CAAC,CAAC,CACF,MAAO,CAAAI,QAAQ,CACjB,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAK,UAAU,CAAIH,EAAE,EAAK,CACzBZ,QAAQ,CAAEO,SAAS,EAAK,CACtB,MAAO,CAAAA,SAAS,CAACS,MAAM,CAAEV,IAAI,EAAKM,EAAE,GAAKN,IAAI,CAACM,EAAE,CAAC,CACnD,CAAC,CAAC,CACJ,CAAC,CAGD,KAAM,CAAAK,WAAW,CAAGA,CAAA,GAAM,CACxB;AACAb,cAAc,CAAEc,SAAS,EAAK,CAC5B,MAAO,CAACA,SAAS,CACnB,CAAC,CAAC,CACJ,CAAC,CAED,mBACEtB,KAAA,QAAAuB,QAAA,eACEzB,IAAA,CAACN,MAAM,GAAE,CAAC,cACVM,IAAA,CAACL,OAAO,GAAE,CAAC,cACXK,IAAA,CAACJ,IAAI,EAACe,OAAO,CAAEA,OAAQ,CAAE,CAAC,cAC1BX,IAAA,CAACH,KAAK,EACJQ,KAAK,CAAEA,KAAM,CACbgB,UAAU,CAAEA,UAAW,CACvBE,WAAW,CAAEA,WAAY,CACzBf,eAAe,CAAEA,eAAgB,CAClC,CAAC,CACDC,WAAW,eACVT,IAAA,CAACF,KAAK,EACJW,WAAW,CAAEA,WAAY,CACzBF,YAAY,CAAEA,YAAa,CAC3BgB,WAAW,CAAEA,WAAY,CACzBT,QAAQ,CAAEA,QAAS,CACpB,CACF,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}