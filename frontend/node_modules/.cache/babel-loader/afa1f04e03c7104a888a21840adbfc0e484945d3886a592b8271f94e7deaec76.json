{"ast":null,"code":"var _jsxFileName = \"/Users/thaqibubayd/Desktop/google-keep-react-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport Sidebar from \"./components/Sidebar/Sidebar.js\";\nimport Form from \"./components/Form/Form.js\";\nimport Notes from \"./components/Notes/Notes.js\";\nimport Modal from \"./components/Modal/Modal.js\";\nimport Login from \"./components/Login/Login.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NOTES = [];\nconst App = () => {\n  _s();\n  // state for auth\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [showLogin, setShowLogin] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(() => {\n    const token = localStorage.getItem(\"token\");\n    const expiry = localStorage.getItem(\"tokenExpiry\");\n    if (!token || !expiry || Date.now() > Number(expiry)) {\n      localStorage.clear;\n    }\n  }\n  // localStorage.getItem(\"isLoggedIn\") === \"true\"\n  );\n  // creating state for Notes\n  const [notes, setNotes] = useState(NOTES);\n  const [selectedNote, setSelectedNote] = useState({});\n  // creating state for Modal using \"is\" for boolean\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const addNote = note => {\n    setNotes(prevNotes => {\n      return [...prevNotes, note];\n    });\n  };\n  const editNote = editedNote => {\n    setNotes(prevNotes => {\n      const newArray = prevNotes.map(note => {\n        if (editedNote.id === note.id) {\n          note.title = editedNote.title;\n          note.text = editedNote.text;\n        }\n        return note;\n      });\n      return newArray;\n    });\n  };\n  const deleteNote = id => {\n    setNotes(prevNotes => {\n      return prevNotes.filter(note => id !== note.id);\n    });\n  };\n  const toggleModal = () => {\n    // open or close the modal on previous state - setIsModalOpen\n    setIsModalOpen(prevState => {\n      return !prevState;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          setIsLoggedIn: setIsLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            addNote: addNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Notes, {\n            notes: notes,\n            deleteNote: deleteNote,\n            toggleModal: toggleModal,\n            setSelectedNote: setSelectedNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n            isModalOpen: isModalOpen,\n            selectedNote: selectedNote,\n            toggleModal: toggleModal,\n            editNote: editNote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pN2hlP9SVopUnWRcYq96weuPwPk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","Navigate","Navbar","Sidebar","Form","Notes","Modal","Login","jsxDEV","_jsxDEV","Fragment","_Fragment","NOTES","App","_s","isLoggedIn","setIsLoggedIn","token","localStorage","getItem","expiry","Date","now","Number","clear","notes","setNotes","selectedNote","setSelectedNote","isModalOpen","setIsModalOpen","addNote","note","prevNotes","editNote","editedNote","newArray","map","id","title","text","deleteNote","filter","toggleModal","prevState","children","path","element","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thaqibubayd/Desktop/google-keep-react-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport Sidebar from \"./components/Sidebar/Sidebar.js\";\nimport Form from \"./components/Form/Form.js\";\nimport Notes from \"./components/Notes/Notes.js\";\nimport Modal from \"./components/Modal/Modal.js\";\nimport Login from \"./components/Login/Login.js\";\n\n\nconst NOTES = [];\nconst App = () => {\n  // state for auth\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // const [showLogin, setShowLogin] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(() => {\n    const token = localStorage.getItem(\"token\")\n    const expiry = localStorage.getItem(\"tokenExpiry\")\n    if (!token || !expiry || Date.now() > Number(expiry)) {\n      localStorage.clear\n    }\n  }\n    // localStorage.getItem(\"isLoggedIn\") === \"true\"\n  );\n  // creating state for Notes\n  const [notes, setNotes] = useState(NOTES);\n  const [selectedNote, setSelectedNote] = useState({});\n  // creating state for Modal using \"is\" for boolean\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const addNote = (note) => {\n    setNotes((prevNotes) => {\n      return [...prevNotes, note];\n    });\n  };\n\n  const editNote = (editedNote) => {\n    setNotes((prevNotes) => {\n      const newArray = prevNotes.map((note) => {\n        if (editedNote.id === note.id) {\n          note.title = editedNote.title;\n          note.text = editedNote.text;\n        }\n        return note;\n      });\n      return newArray;\n    });\n  };\n\n  const deleteNote = (id) => {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((note) => id !== note.id);\n    });\n  };\n\n  const toggleModal = () => {\n    // open or close the modal on previous state - setIsModalOpen\n    setIsModalOpen((prevState) => {\n      return !prevState;\n    });\n  };\n\n  return (\n    <Router>\n      <Routes>\n        {/*If user is logged in, show Login */}\n        <Route\n          path=\"/login\"\n          element={\n            isLoggedIn ? (\n              <Navigate to=\"/\" />\n            ) : (\n              <Login setIsLoggedIn={setIsLoggedIn} />\n            )\n          }\n        />\n        {/* {!isLoggedIn ? (\n        showLogin ? (\n          <Login setIsLoggedIn={setIsLoggedIn} setShowLogin={setShowLogin} />\n        ) : (\n          <Signup setShowLogin={setShowLogin} />\n        )\n      ) : ( */}\n\n        <Route\n          path=\"/\"\n          element={\n            isLoggedIn ? (\n              <>\n                <Navbar />\n                <Sidebar />\n                <Form addNote={addNote} />\n                <Notes\n                  notes={notes}\n                  deleteNote={deleteNote}\n                  toggleModal={toggleModal}\n                  setSelectedNote={setSelectedNote}\n                />\n                {isModalOpen && (\n                  <Modal\n                    isModalOpen={isModalOpen}\n                    selectedNote={selectedNote}\n                    toggleModal={toggleModal}\n                    editNote={editNote}\n                  />\n                )}\n              </>\n            ) : (\n              <Navigate to=\"/login\" />\n            )\n          }\n        />\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}