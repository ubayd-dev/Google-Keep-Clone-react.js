{"ast":null,"code":"var _jsxFileName = \"/Users/thaqibubayd/Desktop/google-keep-react-app/frontend/src/context/FormContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useState, useContext } from \"react\";\n// import api from \"../services/axios.js\";\n// import { createNote } from \"../services/notes.js\";\n\n// // Create A Context\n// const FormContext = createContext();\n// export const FormProvider = ({ children }) => {\n//   const [notes, setNotes] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   // GET ALL NOTES\n//   const fetchNotes = async () => {\n//     setLoading(true);\n\n//     try {\n//       // HIT BACKEND CAL\n//       const res = await api.get(\"/notes\");\n//       //   STORE RESPONSE IN STATE, UPDATE STATE\n//       setNotes(res.data);\n//     } catch (e) {\n//       console.error(\"Error fetching notes:\", e);\n//     } finally {\n//       //   HIDE LOADING AFTER FETCH\n//       setLoading(false);\n//     }\n//   };\n//   const addNote = async ({ title, text }) => {\n//     try {\n//       const res = await api.post(\"/notes/create\", { title, content: text });\n//       setNotes((prevNotes) => [...prevNotes, res.data]);\n//     } catch (e) {\n//       console.error(\"Error adding note:\", e);\n//     }\n//   };\n//   const editNote = async ({ id, title, text }) => {\n//     try {\n//       const res = await api.patch(`/notes${id}`, { title, content: text });\n//       setNotes((prevNotes) =>\n//         prevNotes.map((note) => (note.id === id ? res.data : note))\n//       );\n//     } catch (e) {\n//       console.error(\"Error editing note:\", e);\n//     }\n//   };\n\n//   const deleteNote = async ({ id, title, text }) => {\n//     try {\n//       const res = await api.delete(\"/notes\", { title, context: text });\n//     } catch (e) {\n//       console.error(\"Error deleting note\");\n//     }\n//   };\n\n//   return (\n//     <FormContext.Provider\n//       value={{ notes, loading, fetchNotes, addNote, editNote, deleteNote }}\n//     >\n//       {children}\n//     </FormContext.Provider>\n//   );\n// };\n\n// export const useFormContext = () => useContext(FormContext);\nimport React, { createContext, useState, useContext } from \"react\";\nimport { createNote, getNotes, updateNote, deleteNote as deleteNoteService } from \"../services/notes.js\";\n\n// Create A Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContext = /*#__PURE__*/createContext();\nexport const FormProvider = ({\n  children\n}) => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // GET ALL NOTES\n  const fetchNotes = async () => {\n    setLoading(true);\n    try {\n      const res = await getNotes();\n      setNotes(res.data);\n    } catch (e) {\n      console.error(\"Error fetching notes:\", e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ADD NOTE\n  const addNote = async ({\n    title,\n    text\n  }) => {\n    try {\n      const res = await createNote({\n        title,\n        content: text\n      });\n      setNotes(prevNotes => [...prevNotes, res.data]);\n    } catch (e) {\n      console.error(\"Error adding note:\", e);\n    }\n  };\n\n  // EDIT NOTE\n  const editNote = async ({\n    id,\n    title,\n    text\n  }) => {\n    try {\n      const res = await updateNote({\n        id,\n        title,\n        content: text\n      });\n      setNotes(prevNotes => prevNotes.map(note => note.id === id ? res.data : note));\n    } catch (e) {\n      console.error(\"Error editing note:\", e);\n    }\n  };\n\n  // DELETE NOTE\n  const deleteNote = async id => {\n    try {\n      await deleteNoteService(id);\n      setNotes(prevNotes => prevNotes.filter(note => note.id !== id));\n    } catch (e) {\n      console.error(\"Error deleting note:\", e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: {\n      notes,\n      loading,\n      fetchNotes,\n      addNote,\n      editNote,\n      deleteNote\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(FormProvider, \"31Uge2ya4Z8LWkVS0TR1LntjQ44=\");\n_c = FormProvider;\nexport const useFormContext = () => {\n  _s2();\n  return useContext(FormContext);\n};\n_s2(useFormContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"FormProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","createNote","getNotes","updateNote","deleteNote","deleteNoteService","jsxDEV","_jsxDEV","FormContext","FormProvider","children","_s","notes","setNotes","loading","setLoading","fetchNotes","res","data","e","console","error","addNote","title","text","content","prevNotes","editNote","id","map","note","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFormContext","_s2","$RefreshReg$"],"sources":["/Users/thaqibubayd/Desktop/google-keep-react-app/frontend/src/context/FormContext.js"],"sourcesContent":["// import React, { createContext, useState, useContext } from \"react\";\n// import api from \"../services/axios.js\";\n// import { createNote } from \"../services/notes.js\";\n\n// // Create A Context\n// const FormContext = createContext();\n// export const FormProvider = ({ children }) => {\n//   const [notes, setNotes] = useState([]);\n//   const [loading, setLoading] = useState(false);\n\n//   // GET ALL NOTES\n//   const fetchNotes = async () => {\n//     setLoading(true);\n\n//     try {\n//       // HIT BACKEND CAL\n//       const res = await api.get(\"/notes\");\n//       //   STORE RESPONSE IN STATE, UPDATE STATE\n//       setNotes(res.data);\n//     } catch (e) {\n//       console.error(\"Error fetching notes:\", e);\n//     } finally {\n//       //   HIDE LOADING AFTER FETCH\n//       setLoading(false);\n//     }\n//   };\n//   const addNote = async ({ title, text }) => {\n//     try {\n//       const res = await api.post(\"/notes/create\", { title, content: text });\n//       setNotes((prevNotes) => [...prevNotes, res.data]);\n//     } catch (e) {\n//       console.error(\"Error adding note:\", e);\n//     }\n//   };\n//   const editNote = async ({ id, title, text }) => {\n//     try {\n//       const res = await api.patch(`/notes${id}`, { title, content: text });\n//       setNotes((prevNotes) =>\n//         prevNotes.map((note) => (note.id === id ? res.data : note))\n//       );\n//     } catch (e) {\n//       console.error(\"Error editing note:\", e);\n//     }\n//   };\n\n//   const deleteNote = async ({ id, title, text }) => {\n//     try {\n//       const res = await api.delete(\"/notes\", { title, context: text });\n//     } catch (e) {\n//       console.error(\"Error deleting note\");\n//     }\n//   };\n\n//   return (\n//     <FormContext.Provider\n//       value={{ notes, loading, fetchNotes, addNote, editNote, deleteNote }}\n//     >\n//       {children}\n//     </FormContext.Provider>\n//   );\n// };\n\n// export const useFormContext = () => useContext(FormContext);\nimport React, { createContext, useState, useContext } from \"react\";\nimport { createNote, getNotes, updateNote, deleteNote as deleteNoteService } from \"../services/notes.js\";\n\n// Create A Context\nconst FormContext = createContext();\n\nexport const FormProvider = ({ children }) => {\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  // GET ALL NOTES\n  const fetchNotes = async () => {\n    setLoading(true);\n    try {\n      const res = await getNotes();\n      setNotes(res.data);\n    } catch (e) {\n      console.error(\"Error fetching notes:\", e);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // ADD NOTE\n  const addNote = async ({ title, text }) => {\n    try {\n      const res = await createNote({ title, content: text });\n      setNotes((prevNotes) => [...prevNotes, res.data]);\n    } catch (e) {\n      console.error(\"Error adding note:\", e);\n    }\n  };\n\n  // EDIT NOTE\n  const editNote = async ({ id, title, text }) => {\n    try {\n      const res = await updateNote({ id, title, content: text });\n      setNotes((prevNotes) =>\n        prevNotes.map((note) => (note.id === id ? res.data : note))\n      );\n    } catch (e) {\n      console.error(\"Error editing note:\", e);\n    }\n  };\n\n  // DELETE NOTE\n  const deleteNote = async (id) => {\n    try {\n      await deleteNoteService(id);\n      setNotes((prevNotes) => prevNotes.filter((note) => note.id !== id));\n    } catch (e) {\n      console.error(\"Error deleting note:\", e);\n    }\n  };\n\n  return (\n    <FormContext.Provider\n      value={{ notes, loading, fetchNotes, addNote, editNote, deleteNote }}\n    >\n      {children}\n    </FormContext.Provider>\n  );\n};\n\nexport const useFormContext = () => useContext(FormContext);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}