{"ast":null,"code":"var _jsxFileName = \"/Users/thaqibubayd/Desktop/react-project/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Form from \"./components/Form/Form\";\nimport Notes from \"./components/Notes/Notes\";\nimport Modal from \"./components/Modal/Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOTES = [\n  // {\n  //   id: \"a123\",\n  //   title: \"some title1\",\n  //   text: \"some text1\",\n  // },\n  // {\n  //   id: \"a123\",\n  //   title: \"some title2\",\n  //   text: \"some text2\",\n  // },\n  // {\n  //   id: \"a123\",\n  //   title: \"some title1\",\n  //   text: \"some text1\",\n  // },\n  // {\n  //   id: \"a123\",\n  //   title: \"some title2\",\n  //   text: \"some text2\",\n  // },\n];\nconst App = () => {\n  _s();\n  // creating state for Notes\n  const [notes, setNotes] = useState(NOTES);\n  // creating state for Modal using \"is\" for boolean\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const addNote = note => {\n    setNotes(prevNotes => {\n      return [...prevNotes, note];\n    });\n  };\n  const deleteNote = id => {\n    setNotes(prevNotes => {\n      return prevNotes.filter(note => id !== note.id);\n    });\n  };\n  const toggleModal = () => {\n    // open or close the modal on previous state - setIs\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addNote: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notes, {\n      notes: notes,\n      deleteNote: deleteNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isModalOpen: isModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"E/+mseQUHFnO42vMNTehFyeb/JE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","Sidebar","Form","Notes","Modal","jsxDEV","_jsxDEV","NOTES","App","_s","notes","setNotes","isModalOpen","setIsModalOpen","addNote","note","prevNotes","deleteNote","id","filter","toggleModal","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thaqibubayd/Desktop/react-project/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport Form from \"./components/Form/Form\";\nimport Notes from \"./components/Notes/Notes\";\nimport Modal from \"./components/Modal/Modal\";\n\nconst NOTES = [\n  // {\n  //   id: \"a123\",\n  //   title: \"some title1\",\n  //   text: \"some text1\",\n  // },\n  // {\n  //   id: \"a123\",\n  //   title: \"some title2\",\n  //   text: \"some text2\",\n  // },\n  // {\n  //   id: \"a123\",\n  //   title: \"some title1\",\n  //   text: \"some text1\",\n  // },\n  // {\n  //   id: \"a123\",\n  //   title: \"some title2\",\n  //   text: \"some text2\",\n  // },\n];\nconst App = () => {\n  // creating state for Notes\n  const [notes, setNotes] = useState(NOTES);\n  // creating state for Modal using \"is\" for boolean\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const addNote = (note) => {\n    setNotes((prevNotes) => {\n      return [...prevNotes, note];\n    });\n  };\n\n   const deleteNote = (id) => {\n    setNotes((prevNotes) => {\n      return prevNotes.filter(note => id !== note.id)\n    });\n   };\n  \n  const toggleModal = () => {\n    // open or close the modal on previous state - setIs\n  }\n  \n  \n  return (\n    <div>\n      <Navbar />\n      <Sidebar />\n      <Form addNote={addNote} />\n      <Notes notes={notes} deleteNote={deleteNote} />\n      <Modal isModalOpen={isModalOpen} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,OAAO,MAAM,8BAA8B;AAClD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,KAAK,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,KAAK,GAAG;EACZ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA,CACD;AACD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACQ,KAAK,CAAC;EACzC;EACE,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMe,OAAO,GAAIC,IAAI,IAAK;IACxBJ,QAAQ,CAAEK,SAAS,IAAK;MACtB,OAAO,CAAC,GAAGA,SAAS,EAAED,IAAI,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC;EAEA,MAAME,UAAU,GAAIC,EAAE,IAAK;IAC1BP,QAAQ,CAAEK,SAAS,IAAK;MACtB,OAAOA,SAAS,CAACG,MAAM,CAACJ,IAAI,IAAIG,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC;IACjD,CAAC,CAAC;EACH,CAAC;EAEF,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB;EAAA,CACD;EAGD,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACN,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA,CAACL,OAAO;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACXnB,OAAA,CAACJ,IAAI;MAACY,OAAO,EAAEA;IAAQ;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BnB,OAAA,CAACH,KAAK;MAACO,KAAK,EAAEA,KAAM;MAACO,UAAU,EAAEA;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CnB,OAAA,CAACF,KAAK;MAACQ,WAAW,EAAEA;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhCID,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAkCT,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}