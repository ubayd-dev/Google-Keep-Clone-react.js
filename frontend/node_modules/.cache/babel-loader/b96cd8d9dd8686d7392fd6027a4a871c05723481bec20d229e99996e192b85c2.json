{"ast":null,"code":"var _jsxFileName = \"/Users/thaqibubayd/Desktop/google-keep-react-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport Sidebar from \"./components/Sidebar/Sidebar.js\";\nimport Form from \"./components/Form/Form.js\";\nimport Notes from \"./components/Notes/Notes.js\";\nimport Modal from \"./components/Modal/Modal.js\";\nimport Login from \"./components/Login/Login.js\";\nimport Signup from \"./components/Signup/Signup.js\";\nimport { useFormContext } from \"./context/FormContext.js\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NOTES = [];\nconst App = () => {\n  _s();\n  const {\n    fetchNotes\n  } = useFormContext();\n  // state for auth\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [showLogin, setShowLogin] = useState(true);\n  // creating state for Notes\n  const [notes, setNotes] = useState(NOTES);\n  const [selectedNote, setSelectedNote] = useState({});\n  // creating state for Modal using \"is\" for boolean\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // const addNote = (note) => {\n  //   setNotes((prevNotes) => {\n  //     return [...prevNotes, note];\n  //   });\n  // };\n\n  // const editNote = (editedNote) => {\n  //   setNotes((prevNotes) => {\n  //     const newArray = prevNotes.map((note) => {\n  //       if (editedNote.id === note.id) {\n  //         note.title = editedNote.title;\n  //         note.text = editedNote.text;\n  //       }\n  //       return note;\n  //     });\n  //     return newArray;\n  //   });\n  // };\n\n  // const deleteNote = (id) => {\n  //   setNotes((prevNotes) => {\n  //     return prevNotes.filter((note) => id !== note.id);\n  //   });\n  // };\n\n  const toggleModal = () => {\n    // open or close the modal on previous state - setIsModalOpen\n    setIsModalOpen(prevState => {\n      return !prevState;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !isLoggedIn ? showLogin ? /*#__PURE__*/_jsxDEV(Login, {\n      setIsLoggedIn: setIsLoggedIn,\n      setShowLogin: setShowLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Signup, {\n      setShowLogin: setShowLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addNote: addNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Notes, {\n        notes: notes,\n        deleteNote: deleteNote,\n        toggleModal: toggleModal,\n        setSelectedNote: setSelectedNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(Modal, {\n        isModalOpen: isModalOpen,\n        selectedNote: selectedNote,\n        toggleModal: toggleModal,\n        editNote: editNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SVpfAC9RMw2Jmy/IpRSgdjKJl3U=\", false, function () {\n  return [useFormContext];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Navbar","Sidebar","Form","Notes","Modal","Login","Signup","useFormContext","jsxDEV","_jsxDEV","Fragment","_Fragment","NOTES","App","_s","fetchNotes","isLoggedIn","setIsLoggedIn","showLogin","setShowLogin","notes","setNotes","selectedNote","setSelectedNote","isModalOpen","setIsModalOpen","toggleModal","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","addNote","deleteNote","editNote","_c","$RefreshReg$"],"sources":["/Users/thaqibubayd/Desktop/google-keep-react-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Navbar from \"./components/Navbar/Navbar.js\";\nimport Sidebar from \"./components/Sidebar/Sidebar.js\";\nimport Form from \"./components/Form/Form.js\";\nimport Notes from \"./components/Notes/Notes.js\";\nimport Modal from \"./components/Modal/Modal.js\";\nimport Login from \"./components/Login/Login.js\";\nimport Signup from \"./components/Signup/Signup.js\";\nimport { useFormContext } from \"./context/FormContext.js\";\n\nconst NOTES = [];\nconst App = () => {\n  const { fetchNotes } = useFormContext();\n  // state for auth\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [showLogin, setShowLogin] = useState(true);\n  // creating state for Notes\n  const [notes, setNotes] = useState(NOTES);\n  const [selectedNote, setSelectedNote] = useState({});\n  // creating state for Modal using \"is\" for boolean\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  // const addNote = (note) => {\n  //   setNotes((prevNotes) => {\n  //     return [...prevNotes, note];\n  //   });\n  // };\n\n  // const editNote = (editedNote) => {\n  //   setNotes((prevNotes) => {\n  //     const newArray = prevNotes.map((note) => {\n  //       if (editedNote.id === note.id) {\n  //         note.title = editedNote.title;\n  //         note.text = editedNote.text;\n  //       }\n  //       return note;\n  //     });\n  //     return newArray;\n  //   });\n  // };\n\n  // const deleteNote = (id) => {\n  //   setNotes((prevNotes) => {\n  //     return prevNotes.filter((note) => id !== note.id);\n  //   });\n  // };\n\n  \n\n  const toggleModal = () => {\n    // open or close the modal on previous state - setIsModalOpen\n    setIsModalOpen((prevState) => {\n      return !prevState;\n    });\n  };\n\n  return (\n    <div>\n      {/*If user is logged in, show Login */}\n      {!isLoggedIn ? (\n        showLogin ? (\n          <Login setIsLoggedIn={setIsLoggedIn} setShowLogin={setShowLogin} />\n        ) : (\n          <Signup setShowLogin={setShowLogin} />\n        )\n      ) : (\n        <>\n          <Navbar />\n          <Sidebar />\n          <Form addNote={addNote} />\n          <Notes\n            notes={notes}\n            deleteNote={deleteNote}\n            toggleModal={toggleModal}\n            setSelectedNote={setSelectedNote}\n          />\n          {isModalOpen && (\n            <Modal\n              isModalOpen={isModalOpen}\n              selectedNote={selectedNote}\n              toggleModal={toggleModal}\n              editNote={editNote}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}